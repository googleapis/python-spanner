# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.iam.v1 import iam_policy_pb2 as google_dot_iam_dot_v1_dot_iam__policy__pb2
from google.iam.v1 import policy_pb2 as google_dot_iam_dot_v1_dot_policy__pb2
from google.longrunning import operations_pb2 as google_dot_longrunning_dot_operations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.spanner.admin.instance.v1 import spanner_instance_admin_pb2 as google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2


class InstanceAdminStub(object):
    """Cloud Spanner Instance Admin API

    The Cloud Spanner Instance Admin API can be used to create, delete,
    modify and list instances. Instances are dedicated Cloud Spanner serving
    and storage resources to be used by Cloud Spanner databases.

    Each instance has a "configuration", which dictates where the
    serving resources for the Cloud Spanner instance are located (e.g.,
    US-central, Europe). Configurations are created by Google based on
    resource availability.

    Cloud Spanner billing is based on the instances that exist and their
    sizes. After an instance exists, there are no additional
    per-database or per-operation charges for use of the instance
    (though there may be additional network bandwidth charges).
    Instances offer isolation: problems with databases in one instance
    will not affect other instances. However, within an instance
    databases can affect each other. For example, if one database in an
    instance receives a lot of requests and consumes most of the
    instance resources, fewer resources are available for other
    databases in that instance, and their performance may suffer.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListInstanceConfigs = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstanceConfigs',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigsRequest.SerializeToString,
                response_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigsResponse.FromString,
                )
        self.GetInstanceConfig = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstanceConfig',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.GetInstanceConfigRequest.SerializeToString,
                response_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.InstanceConfig.FromString,
                )
        self.CreateInstanceConfig = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/CreateInstanceConfig',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.CreateInstanceConfigRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                )
        self.UpdateInstanceConfig = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/UpdateInstanceConfig',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.UpdateInstanceConfigRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                )
        self.DeleteInstanceConfig = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/DeleteInstanceConfig',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.DeleteInstanceConfigRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListInstanceConfigOperations = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstanceConfigOperations',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigOperationsRequest.SerializeToString,
                response_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigOperationsResponse.FromString,
                )
        self.ListInstances = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstances',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancesRequest.SerializeToString,
                response_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancesResponse.FromString,
                )
        self.ListInstancePartitions = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstancePartitions',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionsRequest.SerializeToString,
                response_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionsResponse.FromString,
                )
        self.GetInstance = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstance',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.GetInstanceRequest.SerializeToString,
                response_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.Instance.FromString,
                )
        self.CreateInstance = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/CreateInstance',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.CreateInstanceRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                )
        self.UpdateInstance = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/UpdateInstance',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.UpdateInstanceRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                )
        self.DeleteInstance = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/DeleteInstance',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.DeleteInstanceRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SetIamPolicy = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/SetIamPolicy',
                request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.SerializeToString,
                response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
                )
        self.GetIamPolicy = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/GetIamPolicy',
                request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.SerializeToString,
                response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
                )
        self.TestIamPermissions = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/TestIamPermissions',
                request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.SerializeToString,
                response_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.FromString,
                )
        self.GetInstancePartition = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstancePartition',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.GetInstancePartitionRequest.SerializeToString,
                response_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.InstancePartition.FromString,
                )
        self.CreateInstancePartition = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/CreateInstancePartition',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.CreateInstancePartitionRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                )
        self.DeleteInstancePartition = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/DeleteInstancePartition',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.DeleteInstancePartitionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UpdateInstancePartition = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/UpdateInstancePartition',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.UpdateInstancePartitionRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                )
        self.ListInstancePartitionOperations = channel.unary_unary(
                '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstancePartitionOperations',
                request_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionOperationsRequest.SerializeToString,
                response_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionOperationsResponse.FromString,
                )


class InstanceAdminServicer(object):
    """Cloud Spanner Instance Admin API

    The Cloud Spanner Instance Admin API can be used to create, delete,
    modify and list instances. Instances are dedicated Cloud Spanner serving
    and storage resources to be used by Cloud Spanner databases.

    Each instance has a "configuration", which dictates where the
    serving resources for the Cloud Spanner instance are located (e.g.,
    US-central, Europe). Configurations are created by Google based on
    resource availability.

    Cloud Spanner billing is based on the instances that exist and their
    sizes. After an instance exists, there are no additional
    per-database or per-operation charges for use of the instance
    (though there may be additional network bandwidth charges).
    Instances offer isolation: problems with databases in one instance
    will not affect other instances. However, within an instance
    databases can affect each other. For example, if one database in an
    instance receives a lot of requests and consumes most of the
    instance resources, fewer resources are available for other
    databases in that instance, and their performance may suffer.
    """

    def ListInstanceConfigs(self, request, context):
        """Lists the supported instance configurations for a given project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstanceConfig(self, request, context):
        """Gets information about a particular instance configuration.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInstanceConfig(self, request, context):
        """Creates an instance config and begins preparing it to be used. The
        returned [long-running operation][google.longrunning.Operation]
        can be used to track the progress of preparing the new
        instance config. The instance config name is assigned by the caller. If the
        named instance config already exists, `CreateInstanceConfig` returns
        `ALREADY_EXISTS`.

        Immediately after the request returns:

        * The instance config is readable via the API, with all requested
        attributes. The instance config's
        [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
        field is set to true. Its state is `CREATING`.

        While the operation is pending:

        * Cancelling the operation renders the instance config immediately
        unreadable via the API.
        * Except for deleting the creating resource, all other attempts to modify
        the instance config are rejected.

        Upon completion of the returned operation:

        * Instances can be created using the instance configuration.
        * The instance config's
        [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
        field becomes false. Its state becomes `READY`.

        The returned [long-running operation][google.longrunning.Operation] will
        have a name of the format
        `<instance_config_name>/operations/<operation_id>` and can be used to track
        creation of the instance config. The
        [metadata][google.longrunning.Operation.metadata] field type is
        [CreateInstanceConfigMetadata][google.spanner.admin.instance.v1.CreateInstanceConfigMetadata].
        The [response][google.longrunning.Operation.response] field type is
        [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
        successful.

        Authorization requires `spanner.instanceConfigs.create` permission on
        the resource
        [parent][google.spanner.admin.instance.v1.CreateInstanceConfigRequest.parent].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateInstanceConfig(self, request, context):
        """Updates an instance config. The returned
        [long-running operation][google.longrunning.Operation] can be used to track
        the progress of updating the instance. If the named instance config does
        not exist, returns `NOT_FOUND`.

        Only user managed configurations can be updated.

        Immediately after the request returns:

        * The instance config's
        [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
        field is set to true.

        While the operation is pending:

        * Cancelling the operation sets its metadata's
        [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata.cancel_time].
        The operation is guaranteed to succeed at undoing all changes, after
        which point it terminates with a `CANCELLED` status.
        * All other attempts to modify the instance config are rejected.
        * Reading the instance config via the API continues to give the
        pre-request values.

        Upon completion of the returned operation:

        * Creating instances using the instance configuration uses the new
        values.
        * The instance config's new values are readable via the API.
        * The instance config's
        [reconciling][google.spanner.admin.instance.v1.InstanceConfig.reconciling]
        field becomes false.

        The returned [long-running operation][google.longrunning.Operation] will
        have a name of the format
        `<instance_config_name>/operations/<operation_id>` and can be used to track
        the instance config modification.  The
        [metadata][google.longrunning.Operation.metadata] field type is
        [UpdateInstanceConfigMetadata][google.spanner.admin.instance.v1.UpdateInstanceConfigMetadata].
        The [response][google.longrunning.Operation.response] field type is
        [InstanceConfig][google.spanner.admin.instance.v1.InstanceConfig], if
        successful.

        Authorization requires `spanner.instanceConfigs.update` permission on
        the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteInstanceConfig(self, request, context):
        """Deletes the instance config. Deletion is only allowed when no
        instances are using the configuration. If any instances are using
        the config, returns `FAILED_PRECONDITION`.

        Only user managed configurations can be deleted.

        Authorization requires `spanner.instanceConfigs.delete` permission on
        the resource [name][google.spanner.admin.instance.v1.InstanceConfig.name].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInstanceConfigOperations(self, request, context):
        """Lists the user-managed instance config [long-running
        operations][google.longrunning.Operation] in the given project. An instance
        config operation has a name of the form
        `projects/<project>/instanceConfigs/<instance_config>/operations/<operation>`.
        The long-running operation
        [metadata][google.longrunning.Operation.metadata] field type
        `metadata.type_url` describes the type of the metadata. Operations returned
        include those that have completed/failed/canceled within the last 7 days,
        and pending operations. Operations returned are ordered by
        `operation.metadata.value.start_time` in descending order starting
        from the most recently started operation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInstances(self, request, context):
        """Lists all instances in the given project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInstancePartitions(self, request, context):
        """Lists all instance partitions for the given instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstance(self, request, context):
        """Gets information about a particular instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInstance(self, request, context):
        """Creates an instance and begins preparing it to begin serving. The
        returned [long-running operation][google.longrunning.Operation]
        can be used to track the progress of preparing the new
        instance. The instance name is assigned by the caller. If the
        named instance already exists, `CreateInstance` returns
        `ALREADY_EXISTS`.

        Immediately upon completion of this request:

        * The instance is readable via the API, with all requested attributes
        but no allocated resources. Its state is `CREATING`.

        Until completion of the returned operation:

        * Cancelling the operation renders the instance immediately unreadable
        via the API.
        * The instance can be deleted.
        * All other attempts to modify the instance are rejected.

        Upon completion of the returned operation:

        * Billing for all successfully-allocated resources begins (some types
        may have lower than the requested levels).
        * Databases can be created in the instance.
        * The instance's allocated resource levels are readable via the API.
        * The instance's state becomes `READY`.

        The returned [long-running operation][google.longrunning.Operation] will
        have a name of the format `<instance_name>/operations/<operation_id>` and
        can be used to track creation of the instance.  The
        [metadata][google.longrunning.Operation.metadata] field type is
        [CreateInstanceMetadata][google.spanner.admin.instance.v1.CreateInstanceMetadata].
        The [response][google.longrunning.Operation.response] field type is
        [Instance][google.spanner.admin.instance.v1.Instance], if successful.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateInstance(self, request, context):
        """Updates an instance, and begins allocating or releasing resources
        as requested. The returned [long-running
        operation][google.longrunning.Operation] can be used to track the
        progress of updating the instance. If the named instance does not
        exist, returns `NOT_FOUND`.

        Immediately upon completion of this request:

        * For resource types for which a decrease in the instance's allocation
        has been requested, billing is based on the newly-requested level.

        Until completion of the returned operation:

        * Cancelling the operation sets its metadata's
        [cancel_time][google.spanner.admin.instance.v1.UpdateInstanceMetadata.cancel_time],
        and begins restoring resources to their pre-request values. The
        operation is guaranteed to succeed at undoing all resource changes,
        after which point it terminates with a `CANCELLED` status.
        * All other attempts to modify the instance are rejected.
        * Reading the instance via the API continues to give the pre-request
        resource levels.

        Upon completion of the returned operation:

        * Billing begins for all successfully-allocated resources (some types
        may have lower than the requested levels).
        * All newly-reserved resources are available for serving the instance's
        tables.
        * The instance's new resource levels are readable via the API.

        The returned [long-running operation][google.longrunning.Operation] will
        have a name of the format `<instance_name>/operations/<operation_id>` and
        can be used to track the instance modification.  The
        [metadata][google.longrunning.Operation.metadata] field type is
        [UpdateInstanceMetadata][google.spanner.admin.instance.v1.UpdateInstanceMetadata].
        The [response][google.longrunning.Operation.response] field type is
        [Instance][google.spanner.admin.instance.v1.Instance], if successful.

        Authorization requires `spanner.instances.update` permission on
        the resource [name][google.spanner.admin.instance.v1.Instance.name].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteInstance(self, request, context):
        """Deletes an instance.

        Immediately upon completion of the request:

        * Billing ceases for all of the instance's reserved resources.

        Soon afterward:

        * The instance and *all of its databases* immediately and
        irrevocably disappear from the API. All data in the databases
        is permanently deleted.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIamPolicy(self, request, context):
        """Sets the access control policy on an instance resource. Replaces any
        existing policy.

        Authorization requires `spanner.instances.setIamPolicy` on
        [resource][google.iam.v1.SetIamPolicyRequest.resource].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIamPolicy(self, request, context):
        """Gets the access control policy for an instance resource. Returns an empty
        policy if an instance exists but does not have a policy set.

        Authorization requires `spanner.instances.getIamPolicy` on
        [resource][google.iam.v1.GetIamPolicyRequest.resource].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestIamPermissions(self, request, context):
        """Returns permissions that the caller has on the specified instance resource.

        Attempting this RPC on a non-existent Cloud Spanner instance resource will
        result in a NOT_FOUND error if the user has `spanner.instances.list`
        permission on the containing Google Cloud Project. Otherwise returns an
        empty set of permissions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstancePartition(self, request, context):
        """Gets information about a particular instance partition.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInstancePartition(self, request, context):
        """Creates an instance partition and begins preparing it to be used. The
        returned [long-running operation][google.longrunning.Operation]
        can be used to track the progress of preparing the new instance partition.
        The instance partition name is assigned by the caller. If the named
        instance partition already exists, `CreateInstancePartition` returns
        `ALREADY_EXISTS`.

        Immediately upon completion of this request:

        * The instance partition is readable via the API, with all requested
        attributes but no allocated resources. Its state is `CREATING`.

        Until completion of the returned operation:

        * Cancelling the operation renders the instance partition immediately
        unreadable via the API.
        * The instance partition can be deleted.
        * All other attempts to modify the instance partition are rejected.

        Upon completion of the returned operation:

        * Billing for all successfully-allocated resources begins (some types
        may have lower than the requested levels).
        * Databases can start using this instance partition.
        * The instance partition's allocated resource levels are readable via the
        API.
        * The instance partition's state becomes `READY`.

        The returned [long-running operation][google.longrunning.Operation] will
        have a name of the format
        `<instance_partition_name>/operations/<operation_id>` and can be used to
        track creation of the instance partition.  The
        [metadata][google.longrunning.Operation.metadata] field type is
        [CreateInstancePartitionMetadata][google.spanner.admin.instance.v1.CreateInstancePartitionMetadata].
        The [response][google.longrunning.Operation.response] field type is
        [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
        successful.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteInstancePartition(self, request, context):
        """Deletes an existing instance partition. Requires that the
        instance partition is not used by any database or backup and is not the
        default instance partition of an instance.

        Authorization requires `spanner.instancePartitions.delete` permission on
        the resource
        [name][google.spanner.admin.instance.v1.InstancePartition.name].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateInstancePartition(self, request, context):
        """Updates an instance partition, and begins allocating or releasing resources
        as requested. The returned [long-running
        operation][google.longrunning.Operation] can be used to track the
        progress of updating the instance partition. If the named instance
        partition does not exist, returns `NOT_FOUND`.

        Immediately upon completion of this request:

        * For resource types for which a decrease in the instance partition's
        allocation has been requested, billing is based on the newly-requested
        level.

        Until completion of the returned operation:

        * Cancelling the operation sets its metadata's
        [cancel_time][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata.cancel_time],
        and begins restoring resources to their pre-request values. The
        operation is guaranteed to succeed at undoing all resource changes,
        after which point it terminates with a `CANCELLED` status.
        * All other attempts to modify the instance partition are rejected.
        * Reading the instance partition via the API continues to give the
        pre-request resource levels.

        Upon completion of the returned operation:

        * Billing begins for all successfully-allocated resources (some types
        may have lower than the requested levels).
        * All newly-reserved resources are available for serving the instance
        partition's tables.
        * The instance partition's new resource levels are readable via the API.

        The returned [long-running operation][google.longrunning.Operation] will
        have a name of the format
        `<instance_partition_name>/operations/<operation_id>` and can be used to
        track the instance partition modification. The
        [metadata][google.longrunning.Operation.metadata] field type is
        [UpdateInstancePartitionMetadata][google.spanner.admin.instance.v1.UpdateInstancePartitionMetadata].
        The [response][google.longrunning.Operation.response] field type is
        [InstancePartition][google.spanner.admin.instance.v1.InstancePartition], if
        successful.

        Authorization requires `spanner.instancePartitions.update` permission on
        the resource
        [name][google.spanner.admin.instance.v1.InstancePartition.name].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInstancePartitionOperations(self, request, context):
        """Lists instance partition [long-running
        operations][google.longrunning.Operation] in the given instance.
        An instance partition operation has a name of the form
        `projects/<project>/instances/<instance>/instancePartitions/<instance_partition>/operations/<operation>`.
        The long-running operation
        [metadata][google.longrunning.Operation.metadata] field type
        `metadata.type_url` describes the type of the metadata. Operations returned
        include those that have completed/failed/canceled within the last 7 days,
        and pending operations. Operations returned are ordered by
        `operation.metadata.value.start_time` in descending order starting from the
        most recently started operation.

        Authorization requires `spanner.instancePartitionOperations.list`
        permission on the resource
        [parent][google.spanner.admin.instance.v1.ListInstancePartitionOperationsRequest.parent].
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InstanceAdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListInstanceConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInstanceConfigs,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigsRequest.FromString,
                    response_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigsResponse.SerializeToString,
            ),
            'GetInstanceConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstanceConfig,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.GetInstanceConfigRequest.FromString,
                    response_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.InstanceConfig.SerializeToString,
            ),
            'CreateInstanceConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInstanceConfig,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.CreateInstanceConfigRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'UpdateInstanceConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateInstanceConfig,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.UpdateInstanceConfigRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'DeleteInstanceConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteInstanceConfig,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.DeleteInstanceConfigRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListInstanceConfigOperations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInstanceConfigOperations,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigOperationsRequest.FromString,
                    response_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigOperationsResponse.SerializeToString,
            ),
            'ListInstances': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInstances,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancesRequest.FromString,
                    response_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancesResponse.SerializeToString,
            ),
            'ListInstancePartitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInstancePartitions,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionsRequest.FromString,
                    response_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionsResponse.SerializeToString,
            ),
            'GetInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstance,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.GetInstanceRequest.FromString,
                    response_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.Instance.SerializeToString,
            ),
            'CreateInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInstance,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.CreateInstanceRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'UpdateInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateInstance,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.UpdateInstanceRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'DeleteInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteInstance,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.DeleteInstanceRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetIamPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIamPolicy,
                    request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.FromString,
                    response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
            ),
            'GetIamPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIamPolicy,
                    request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.FromString,
                    response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
            ),
            'TestIamPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.TestIamPermissions,
                    request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.FromString,
                    response_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.SerializeToString,
            ),
            'GetInstancePartition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstancePartition,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.GetInstancePartitionRequest.FromString,
                    response_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.InstancePartition.SerializeToString,
            ),
            'CreateInstancePartition': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInstancePartition,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.CreateInstancePartitionRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'DeleteInstancePartition': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteInstancePartition,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.DeleteInstancePartitionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateInstancePartition': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateInstancePartition,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.UpdateInstancePartitionRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'ListInstancePartitionOperations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInstancePartitionOperations,
                    request_deserializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionOperationsRequest.FromString,
                    response_serializer=google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionOperationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'google.spanner.admin.instance.v1.InstanceAdmin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InstanceAdmin(object):
    """Cloud Spanner Instance Admin API

    The Cloud Spanner Instance Admin API can be used to create, delete,
    modify and list instances. Instances are dedicated Cloud Spanner serving
    and storage resources to be used by Cloud Spanner databases.

    Each instance has a "configuration", which dictates where the
    serving resources for the Cloud Spanner instance are located (e.g.,
    US-central, Europe). Configurations are created by Google based on
    resource availability.

    Cloud Spanner billing is based on the instances that exist and their
    sizes. After an instance exists, there are no additional
    per-database or per-operation charges for use of the instance
    (though there may be additional network bandwidth charges).
    Instances offer isolation: problems with databases in one instance
    will not affect other instances. However, within an instance
    databases can affect each other. For example, if one database in an
    instance receives a lot of requests and consumes most of the
    instance resources, fewer resources are available for other
    databases in that instance, and their performance may suffer.
    """

    @staticmethod
    def ListInstanceConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstanceConfigs',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigsRequest.SerializeToString,
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstanceConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstanceConfig',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.GetInstanceConfigRequest.SerializeToString,
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.InstanceConfig.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInstanceConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/CreateInstanceConfig',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.CreateInstanceConfigRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateInstanceConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/UpdateInstanceConfig',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.UpdateInstanceConfigRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteInstanceConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/DeleteInstanceConfig',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.DeleteInstanceConfigRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListInstanceConfigOperations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstanceConfigOperations',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigOperationsRequest.SerializeToString,
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstanceConfigOperationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListInstances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstances',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancesRequest.SerializeToString,
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListInstancePartitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstancePartitions',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionsRequest.SerializeToString,
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstance',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.GetInstanceRequest.SerializeToString,
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.Instance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/CreateInstance',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.CreateInstanceRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/UpdateInstance',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.UpdateInstanceRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/DeleteInstance',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.DeleteInstanceRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIamPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/SetIamPolicy',
            google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.SerializeToString,
            google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIamPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/GetIamPolicy',
            google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.SerializeToString,
            google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestIamPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/TestIamPermissions',
            google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.SerializeToString,
            google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstancePartition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/GetInstancePartition',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.GetInstancePartitionRequest.SerializeToString,
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.InstancePartition.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInstancePartition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/CreateInstancePartition',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.CreateInstancePartitionRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteInstancePartition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/DeleteInstancePartition',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.DeleteInstancePartitionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateInstancePartition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/UpdateInstancePartition',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.UpdateInstancePartitionRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListInstancePartitionOperations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/google.spanner.admin.instance.v1.InstanceAdmin/ListInstancePartitionOperations',
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionOperationsRequest.SerializeToString,
            google_dot_spanner_dot_admin_dot_instance_dot_v1_dot_spanner__instance__admin__pb2.ListInstancePartitionOperationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
